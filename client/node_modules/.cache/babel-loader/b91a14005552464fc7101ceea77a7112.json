{"ast":null,"code":"var _jsxFileName = \"/home/becode/BeCode/mern/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './styles';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { createNote } from '../../actions/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [noteData, setNoteData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(createNote(noteData));\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: noteData.creator,\n        onChange: event => setNoteData({ ...noteData,\n          creator: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: noteData.title,\n        onChange: event => setNoteData({ ...noteData,\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: noteData.message,\n        onChange: event => setNoteData({ ...noteData,\n          message: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: noteData.tags,\n        onChange: event => setNoteData({ ...noteData,\n          tags: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setNoteData({ ...noteData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"gCDEfJffvp35tDtB1Y2/i/Jjv4Y=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/becode/BeCode/mern/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","useStyles","FileBase","useDispatch","createNote","Form","noteData","setNoteData","creator","title","message","tags","selectedFile","classes","dispatch","handleSubmit","event","preventDefault","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\nimport useStyles from './styles';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { createNote } from '../../actions/notes';\n\nconst Form = () => {\n    const [noteData, setNoteData] = useState({\n        creator: '',\n        title:'',\n        message:'',\n        tags:'',\n        selectedFile:''\n    });\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        dispatch(createNote(noteData));\n    }\n    const clear = () => {\n\n    }\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">Creating a note</Typography>\n                <TextField \n                    name=\"creator\"\n                    variant=\"outlined\"\n                    label=\"Creator\"\n                    fullWidth value={noteData.creator}\n                    onChange={(event) => setNoteData({ ...noteData, creator: event.target.value })}/>\n                <TextField \n                    name=\"title\"\n                    variant=\"outlined\"\n                    label=\"Title\"\n                    fullWidth value={noteData.title}\n                    onChange={(event) => setNoteData({ ...noteData, title: event.target.value })}/>\n                <TextField \n                    name=\"message\"\n                    variant=\"outlined\"\n                    label=\"Message\"\n                    fullWidth value={noteData.message}\n                    onChange={(event) => setNoteData({ ...noteData, message: event.target.value })}/>\n                <TextField \n                    name=\"tags\"\n                    variant=\"outlined\"\n                    label=\"Tags\"\n                    fullWidth value={noteData.tags}\n                    onChange={(event) => setNoteData({ ...noteData, tags: event.target.value })}/>\n                <div className={classes.fileInput}>\n                    <FileBase type=\"file\" multiple={false} onDone={({base64}) => setNoteData({ ...noteData, selectedFile: base64 })}/>\n                </div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Add</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}